import tkinter as tk
from tkinter import ttk, messagebox, filedialog
from tkinter import font as tkfont
import os

class FotokonyvGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("LoLaBa Fot√≥k√∂nyv")
        self.root.geometry("1200x800")
        self.root.configure(bg='#C4A484')
        
        # Itt t√°rolom a projekt √°llapot√°t, meg az oldalakat
        self.current_layout = 1
        self.pages = []
        
        # Most elind√≠tom a f≈ëmen√ºt
        self.create_main_menu()
    
    def create_main_menu(self):
        """Itt k√©sz√≠tem el a f≈ëmen√ºt ahonnan mindent el lehet √©rni"""
        # El≈ësz√∂r kit√∂rl√∂m az √∂sszes widget-et, hogy tiszta legyen
        for widget in self.root.winfo_children():
            widget.destroy()
        
        # Nagy c√≠m a tetej√©n
        title_font = tkfont.Font(family="Arial", size=24, weight="bold")
        title_label = tk.Label(self.root, text="LoLaBa Fot√≥k√∂nyv", 
                              font=title_font, bg='#C4A484', fg='white')
        title_label.pack(pady=50)
        
        subtitle_label = tk.Label(self.root, text="K√©sz√≠ts saj√°t, egyedi fot√≥k√∂nyvet egyszer≈± l√©p√©sekkel!", 
                                 font=("Arial", 12), bg='#C4A484', fg='white')
        subtitle_label.pack(pady=10)
        
        # Itt vannak a f≈ëmen√º gombjai
        button_frame = tk.Frame(self.root, bg='#C4A484')
        button_frame.pack(pady=50)
        
        # Be√°ll√≠tom a gombok kin√©zet√©t
        button_width = 25
        button_height = 2
        button_font = ("Arial", 11)
        
        # √öj fot√≥k√∂nyv kezd√©se
        new_project_btn = tk.Button(button_frame, text="√öj projekt l√©trehoz√°sa",
                                   width=button_width, height=button_height,
                                   font=button_font, bg='#E8E8E8', fg='black',
                                   command=self.show_page_selection)
        new_project_btn.pack(pady=10)
        
        # R√©gi projekt megnyit√°sa
        open_project_btn = tk.Button(button_frame, text="Kor√°bbi projekt megnyit√°sa",
                                    width=button_width, height=button_height,
                                    font=button_font, bg='#E8E8E8', fg='black',
                                    command=self.load_project)
        open_project_btn.pack(pady=10)
        
        # Kil√©p√©s a programb√≥l
        exit_btn = tk.Button(button_frame, text="Kil√©p√©s",
                            width=button_width, height=button_height,
                            font=button_font, bg='#E8E8E8', fg='black',
                            command=self.root.quit)
        exit_btn.pack(pady=10)
    
    def show_project_menu(self):
        """Ez a projekt men√º, itt lehet menteni, bet√∂lteni stb."""
        for widget in self.root.winfo_children():
            widget.destroy()
        
        # Men√º gombok egy keretben
        button_frame = tk.Frame(self.root, bg='#C4A484')
        button_frame.pack(expand=True)
        
        button_width = 20
        button_height = 2
        button_font = ("Arial", 11)
        
        # Projekt elment√©se
        save_btn = tk.Button(button_frame, text="Projekt ment√©se",
                            width=button_width, height=button_height,
                            font=button_font, bg='#E8E8E8', fg='black',
                            command=self.save_project)
        save_btn.pack(pady=15)
        
        # Projekt bet√∂lt√©se
        load_btn = tk.Button(button_frame, text="Projekt bet√∂lt√©se",
                            width=button_width, height=button_height,
                            font=button_font, bg='#E8E8E8', fg='black',
                            command=self.load_project)
        load_btn.pack(pady=15)
        
        # Fot√≥k√∂nyv export√°l√°sa PDF-be
        export_btn = tk.Button(button_frame, text="Projekt export√°l√°sa",
                              width=button_width, height=button_height,
                              font=button_font, bg='#E8E8E8', fg='black',
                              command=self.show_page_selection)
        export_btn.pack(pady=15)
        
        # Vissza a f≈ëmen√ºbe
        back_btn = tk.Button(button_frame, text="Vissza a f≈ëmen√ºbe",
                            width=button_width, height=button_height,
                            font=button_font, bg='#E8E8E8', fg='black',
                            command=self.create_main_menu)
        back_btn.pack(pady=15)
    
    def show_page_selection(self):
        """Itt lehet kiv√°lasztani hogy h√°ny k√©p legyen egy oldalon"""
        for widget in self.root.winfo_children():
            widget.destroy()
        
        # C√≠m a lap tetej√©n
        title_label = tk.Label(self.root, text="Oldaln√©zet kiv√°laszt√°sa", 
                              font=("Arial", 18, "bold"), bg='#C4A484', fg='white')
        title_label.pack(pady=30)
        
        # Itt lesznek a layout opci√≥k
        layout_frame = tk.Frame(self.root, bg='#C4A484')
        layout_frame.pack(expand=True)
        
        # 3 f√©le layout: 1, 2 vagy 4 k√©p
        layouts = [
            ("1 k√©p", lambda: self.select_layout(1)),
            ("2 k√©p", lambda: self.select_layout(2)), 
            ("4 k√©p", lambda: self.select_layout(4))
        ]
        
        layout_container = tk.Frame(layout_frame, bg='#C4A484')
        layout_container.pack()
        
        for i, (text, command) in enumerate(layouts):
            # Layout el≈ën√©zeti keret
            preview_frame = tk.Frame(layout_container, bg='#E8E8E8', width=200, height=150)
            preview_frame.grid(row=0, column=i, padx=20, pady=10)
            preview_frame.pack_propagate(False)
            
            # Itt mutatom meg hogy n√©z ki az adott layout
            if i == 0:
                # Egy nagy k√©p az eg√©sz oldalon
                img_frame = tk.Frame(preview_frame, bg='#A4B068', width=160, height=110)
                img_frame.pack(padx=20, pady=20)
            elif i == 1:
                # K√©t k√©p egym√°s mellett
                img_container = tk.Frame(preview_frame, bg='#E8E8E8')
                img_container.pack(pady=20)
                img1 = tk.Frame(img_container, bg='#A4B068', width=70, height=90)
                img1.pack(side=tk.LEFT, padx=5)
                img2 = tk.Frame(img_container, bg='#A4B068', width=70, height=90)
                img2.pack(side=tk.LEFT, padx=5)
            else:
                # N√©gy kis k√©p 2x2-es elrendez√©sben
                img_container = tk.Frame(preview_frame, bg='#E8E8E8')
                img_container.pack(pady=15)
                for row in range(2):
                    for col in range(2):
                        img = tk.Frame(img_container, bg='#A4B068', width=60, height=35)
                        img.grid(row=row, column=col, padx=3, pady=3)
            
            # Layout neve alul
            select_label = tk.Label(layout_container, text=text, 
                                   font=("Arial", 10), bg='#C4A484', fg='white')
            select_label.grid(row=1, column=i, pady=5)
            
            # Ha r√°kattintanak akkor kiv√°laszt√≥dik
            preview_frame.bind("<Button-1>", lambda e, cmd=command: cmd())
            for child in preview_frame.winfo_children():
                child.bind("<Button-1>", lambda e, cmd=command: cmd())
        
        # Ezzel a gombbal lehet tov√°bbl√©pni
        apply_btn = tk.Button(self.root, text="üîß Kiv√°laszt √©s alkalmaz",
                             font=("Arial", 11), bg='#E8E8E8', fg='black',
                             command=self.show_photo_editor)
        apply_btn.pack(pady=20)
    
    def show_photo_editor(self):
        """Itt t√∂rt√©nik a var√°zslat - ide lehet fot√≥kat rakni √©s szerkeszteni"""
        for widget in self.root.winfo_children():
            widget.destroy()
        
        # F≈ë t√°rol√≥ az eg√©sz szerkeszt≈ënek
        main_frame = tk.Frame(self.root, bg='#C4A484')
        main_frame.pack(fill=tk.BOTH, expand=True)
        
        # Bal oldal - itt l√°tszanak az oldalak
        left_panel = tk.Frame(main_frame, bg='#C4A484', width=200)
        left_panel.pack(side=tk.LEFT, fill=tk.Y, padx=10, pady=10)
        left_panel.pack_propagate(False)
        
        # Oldalak c√≠me
        pages_label = tk.Label(left_panel, text="Oldalak", 
                              font=("Arial", 14, "bold"), bg='#C4A484', fg='white')
        pages_label.pack(pady=10)
        
        # Itt l√°tszanak az oldalak kis el≈ën√©zetben
        for i in range(1, 3):
            page_frame = tk.Frame(left_panel, bg='#E8E8E8', width=180, height=120)
            page_frame.pack(pady=5)
            page_frame.pack_propagate(False)
            
            page_label = tk.Label(page_frame, text=f"{i}. oldal", 
                                 font=("Arial", 8), bg='#E8E8E8', fg='black')
            page_label.pack(side=tk.BOTTOM)
        
        # √öj oldal hozz√°ad√°sa gomb (+ jel)
        add_page_frame = tk.Frame(left_panel, bg='#E8E8E8', width=180, height=120)
        add_page_frame.pack(pady=5)
        add_page_frame.pack_propagate(False)
        
        add_btn = tk.Label(add_page_frame, text="+", 
                          font=("Arial", 24), bg='#E8E8E8', fg='#A4B068', cursor="hand2")
        add_btn.pack(expand=True)
        add_btn.bind("<Button-1>", lambda e: self.add_new_page())
        
        # K√∂z√©ps≈ë r√©sz - itt szerkesztem a fot√≥k√∂nyvet
        center_panel = tk.Frame(main_frame, bg='#C4A484')
        center_panel.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=10)
        
        # Fot√≥k√∂nyv c√≠me
        book_label = tk.Label(center_panel, text="Fot√≥k√∂nyv", 
                             font=("Arial", 18, "bold"), bg='#C4A484', fg='white')
        book_label.pack(pady=10)
        
        # Itt vannak a fot√≥k helye
        photo_container = tk.Frame(center_panel, bg='#C4A484')
        photo_container.pack(expand=True)
        
        # K√©t oldal a fot√≥k√∂nyvben
        for i in range(2):
            photo_frame = tk.Frame(photo_container, bg='#E8E8E8', width=350, height=250)
            photo_frame.pack(side=tk.LEFT, padx=10, pady=20)
            photo_frame.pack_propagate(False)
            
            # Itt lesz a fot√≥
            photo_area = tk.Frame(photo_frame, bg='#A4B068', width=310, height=200)
            photo_area.pack(pady=20)
            
            if i == 0:
                # Bal oldali fot√≥ be√°ll√≠t√°sai
                controls_frame = tk.Frame(photo_container, bg='#C4A484')
                controls_frame.pack(side=tk.LEFT, fill=tk.Y, padx=10)
                
                # Fot√≥ felt√∂lt√©se gomb
                add_photo_btn = tk.Button(controls_frame, text="Fot√≥ hozz√°ad√°sa ehhez az oldalhoz",
                                         font=("Arial", 9), bg='#E8E8E8', fg='black',
                                         command=self.add_photo)
                add_photo_btn.pack(pady=5)
                
                # M√©ret √°ll√≠t√°sa cs√∫szk√°val
                size_label = tk.Label(controls_frame, text="M√©retez√©s", 
                                     font=("Arial", 10), bg='#C4A484', fg='white')
                size_label.pack(pady=(20, 5))
                
                size_scale = tk.Scale(controls_frame, from_=0, to=100, orient=tk.HORIZONTAL,
                                     bg='#C4A484', fg='white', length=200)
                size_scale.set(35)
                size_scale.pack()
                
                # Poz√≠ci√≥ √°ll√≠t√°sa cs√∫szk√°val
                pos_label = tk.Label(controls_frame, text="Poz√≠ci√≥", 
                                    font=("Arial", 10), bg='#C4A484', fg='white')
                pos_label.pack(pady=(20, 5))
                
                pos_scale = tk.Scale(controls_frame, from_=0, to=100, orient=tk.HORIZONTAL,
                                    bg='#C4A484', fg='white', length=200)
                pos_scale.set(35)
                pos_scale.pack()
                
            else:
                # Jobb oldali fot√≥ extra be√°ll√≠t√°sai
                right_controls = tk.Frame(photo_container, bg='#C4A484')
                right_controls.pack(side=tk.RIGHT, fill=tk.Y, padx=10)
                
                # Extra funkci√≥k gombjai
                bg_buttons = ["H√°tt√©r be√°ll√≠t√°sa", "Sz√∂veg hozz√°ad√°sa", "Keret hozz√°ad√°sa"]
                for btn_text in bg_buttons:
                    btn = tk.Button(right_controls, text=btn_text,
                                   font=("Arial", 9), bg='#E8E8E8', fg='black',
                                   width=15)
                    btn.pack(pady=5)
        
        # Als√≥ eszk√∂zt√°r
        bottom_panel = tk.Frame(self.root, bg='#C4A484', height=60)
        bottom_panel.pack(side=tk.BOTTOM, fill=tk.X)
        bottom_panel.pack_propagate(False)
        
        # Fontos gombok alul (ment√©s, bet√∂lt√©s stb.)
        toolbar_buttons = [
            ("Ment√©s", self.save_project),
            ("Bet√∂lt√©s", self.load_project), 
            ("Export√°l√°s", self.export_project),
            ("F≈ëmen√º", self.create_main_menu)
        ]
        toolbar_frame = tk.Frame(bottom_panel, bg='#C4A484')
        toolbar_frame.pack(expand=True)
        
        for btn_text, command in toolbar_buttons:
            btn = tk.Button(toolbar_frame, text=btn_text,
                           font=("Arial", 10), bg='#E8E8E8', fg='black',
                           command=command)
            btn.pack(side=tk.LEFT, padx=10, pady=15)
    
    def select_layout(self, layout_type):
        """Kiv√°lasztja hogy milyen layout legyen (h√°ny k√©p)"""
        layout_names = {1: "egy k√©pes", 2: "k√©t k√©pes", 4: "n√©gy k√©pes"}
        messagebox.showinfo("Layout", f"{layout_names[layout_type]} layout kiv√°lasztva")
        # Itt √°ll√≠tom be a layout t√≠pus√°t
        self.current_layout = layout_type
    
    def add_new_page(self):
        """√öj oldalt ad hozz√° a fot√≥k√∂nyvh√∂z"""
        messagebox.showinfo("√öj oldal", "√öj oldal hozz√°adva a fot√≥k√∂nyvh√∂z!")
        # Itt csin√°ln√°m meg az √∫j oldal l√©trehoz√°s√°t
    
    def create_layout1(self):
        """Layout 1 haszn√°lata - ezt m√©g r√©gebben csin√°ltam"""
        self.select_layout(1)
    
    def create_layout2(self):
        """Layout 2 haszn√°lata - ezt m√©g r√©gebben csin√°ltam"""
        self.select_layout(2)
    
    def create_layout3(self):
        """Layout 3 haszn√°lata - ezt m√©g r√©gebben csin√°ltam"""
        self.select_layout(4)
    
    def add_photo(self):
        """Fot√≥t ad hozz√° a projekthez"""
        filename = filedialog.askopenfilename(
            title="V√°lassz fot√≥t",
            filetypes=[("K√©pf√°jlok", "*.jpg *.jpeg *.png *.gif *.bmp")]
        )
        if filename:
            messagebox.showinfo("Fot√≥", f"Fot√≥ hozz√°adva: {os.path.basename(filename)}")
    
    def save_project(self):
        """Elmenti a projektet f√°jlba"""
        filename = filedialog.asksaveasfilename(
            title="Projekt ment√©se",
            defaultextension=".lolaba",
            filetypes=[("LoLaBa projekt", "*.lolaba"), ("Minden f√°jl", "*.*")]
        )
        if filename:
            messagebox.showinfo("Ment√©s", f"Projekt mentve: {os.path.basename(filename)}")
    
    def load_project(self):
        """Bet√∂lt egy kor√°bban mentett projektet"""
        filename = filedialog.askopenfilename(
            title="Projekt bet√∂lt√©se",
            filetypes=[("LoLaBa projekt", "*.lolaba"), ("Minden f√°jl", "*.*")]
        )
        if filename:
            messagebox.showinfo("Bet√∂lt√©s", f"Projekt bet√∂ltve: {os.path.basename(filename)}")
            # ha siker√ºlt bet√∂lteni akkor r√∂gt√∂n a szerkeszt≈ëbe l√©pek
            self.show_photo_editor()
    
    def export_project(self):
        """Export√°lja a k√©sz fot√≥k√∂nyvet PDF form√°tumban"""
        filename = filedialog.asksaveasfilename(
            title="Projekt export√°l√°sa",
            defaultextension=".pdf",
            filetypes=[("PDF f√°jl", "*.pdf"), ("Minden f√°jl", "*.*")]
        )
        if filename:
            messagebox.showinfo("Export√°l√°s", f"Projekt export√°lva: {os.path.basename(filename)}")

def main():
    root = tk.Tk()
    app = FotokonyvGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
